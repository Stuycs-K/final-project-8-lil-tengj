Panel crushP;
static final int SQUARE_SIZE = 100;//this is a constant.
int draggedCol;
int draggedRow;
void setup(){
  size(515, 515);
  crushP = new Panel((height -15)/ SQUARE_SIZE, (width -15)/SQUARE_SIZE);
  //crushP = new Panel(5,5);
  System.out.println(crushP);
}


void grid(Panel crushP) {
  background(255);
  //fill(0);
  stroke(255);
  //strokeWeight(15);
  int x =0;
  int y=0;
  for(int i = 0; i < width -15; i+= SQUARE_SIZE){
    for(int j = 0; j < height - 15; j += SQUARE_SIZE){
      if(x>= crushP.getRow()){
        x=0;
      }
      if(y>= crushP.getCol()){
        y=0;
      }
        Candy c = crushP.getCandy(x,y);
        c.buildCandy();
        //if(c.getName().equals("red")){
        //rect(i, j, SQUARE_SIZE-10, SQUARE_SIZE-20);}
        //if(c.getName().equals("blue")){
        //rect(i, j, SQUARE_SIZE-10, SQUARE_SIZE-10);}
        //if(c.getName().equals("yellow")){
        //circle(i, j, SQUARE_SIZE-10);}
        //if(c.getName().equals("purple")){
        //ellipse(i, j, SQUARE_SIZE-10, SQUARE_SIZE-20);}
        //if(c.getName().equals("orange")){
        //triangle(i+SQUARE_SIZE-50, j, i-SQUARE_SIZE+50, j, i, j-SQUARE_SIZE+30);}
        rect(i, j, SQUARE_SIZE-10, SQUARE_SIZE-10);

        x++;
    }
    y++;
  }
}

void mousePressed(){
  int col = (mouseX -15) / SQUARE_SIZE;
  int row = (mouseY -15)/ SQUARE_SIZE;
  if (col >= 0 && col < crushP.getCol()&& row >= 0 && row < crushP.getRow()) {
    draggedCol = col;
    draggedRow = row;
  }
}

void mouseDragged() {
  int col = (mouseX-15) / SQUARE_SIZE;
  int row = (mouseY-15) / SQUARE_SIZE;
  
  if (col >= 0 && col < crushP.getCol() && row >= 0 && row < crushP.getRow()) {
    if(row == draggedRow+1 || row ==draggedRow -1 ||
    col == draggedCol+1 || col ==draggedCol -1)
    crushP.swapCandy(draggedRow, draggedCol, row, col);
   }
    draggedCol = col;
    draggedRow = row;
}


void draw(){
  grid(crushP);
}
